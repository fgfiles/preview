ScaleUtils = {}, ScaleUtils.scaleGame = function(a) {
    a.scale.fullScreenTarget = this.parentElement, a.scale.scaleMode = Phaser.ScaleManager.USER_SCALE, a.stage.disableVisibilityChange = !0, a.input.maxPointers = 1, a.scale.compatibility.orientationFallback = "viewport";
    var b = a.scale.width,
        c = a.scale.height;
    a.scale.setResizeCallback(function() {
        var d = window.innerWidth,
            e = window.innerHeight,
            f = b,
            g = c;
        a.scale.fullScreenScaleMode = Phaser.ScaleManager.SHOW_ALL, window.innerHeight > window.innerWidth ? (a.scale.forceOrientation(!1, !1), a.scale.pageAlignHorizontally = !1, a.scale.pageAlignVertically = !1) : (a.scale.forceOrientation(!0, !1), a.scale.pageAlignHorizontally = !0, a.scale.pageAlignVertically = !0);
        var h = d / f,
            i = e / g,
            j = i > h ? h : i;
        a.scale.setUserScale(j, j)
    }, this)
}, ScaleUtils.scaleGamePercents = function(a, b) {
    a.scale.fullScreenTarget = this.parentElement, a.scale.scaleMode = Phaser.ScaleManager.USER_SCALE, a.stage.disableVisibilityChange = !0, a.input.maxPointers = 1, a.scale.compatibility.orientationFallback = "viewport";
    a.scale.width, a.scale.height;
    a.scale.setUserScale(b, b), a.scale.setResizeCallback(function() {
        console.log(window.innerWidth, window.innerHeight)
    })
}, Function.prototype.bind = function() {
    var a = this,
        b = Array.prototype.slice.call(arguments),
        c = b.shift();
    return function() {
        return a.apply(c, b.concat(Array.prototype.slice.call(arguments)))
    }
}, Utils = {}, Utils.extend = function(a, b) {
    var c = function() {};
    c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a, a.superclass = b.prototype
}, Utils.SoundRepeater = function(a, b) {
    this.counter = 0, this.sound = a, this.times = b, this.playSound = function() {
        this.sound.onStop.addOnce(this.onStopSound, this), this.sound.play(null, 0)
    }, this.onStopSound = function() {
        this.counter++, this.counter < this.times && this.playSound()
    }, this.stopSound = function() {
        this.counter = 0, this.times = 0, this.sound.onStop.remove(this.onStopSound, this), this.sound.stop()
    }, this.playSound()
}, Utils.convertToMMSS = function(a) {
    var b = Math.floor(a / 60),
        c = a % 60,
        d = b.toString(),
        e = c.toString();
    return 10 > b && (d = b), 10 > c && (e = "0" + c), d + ":" + e
}, Utils.getRand = function(a, b) {
    return Math.floor(Math.random() * b) + a
}, window.console || (window.console = {
    log: function() {}
}), window.ScoobyBoo || (ScoobyBoo = {}), ScoobyBoo.Boot = function(a) {}, ScoobyBoo.Boot.prototype = {
    preload: function() {
        this.load.image("preloader.bar", "assets/images/HC_Loader_Circle_Blue_v1.png")
    },
    create: function() {
        ScoobyBoo.GameModel.isDesktop = (!device.mobile() || device.tablet()) && !ScoobyBoo.GameModel.EMULATE_MOBILE, Phaser.renderType = Phaser.CANVAS, ScoobyBoo.GameModel.controller = new ScoobyBoo.AssetsController(ScoobyBoo.GameModel.isDesktop), this.game.input.maxPointers = 1, this.game.stage.disableVisibilityChange = !0, this.game.device.desktop ? ScaleUtils.scaleGame(this.game) : ScaleUtils.scaleGame(this.game), this.game.state.start("Preloader")
    }
}, window.onload = function() {
    var a = new Phaser.Game(ScoobyBoo.GameModel.GAME_WIDTH, ScoobyBoo.GameModel.GAME_HEIGHT, Phaser.AUTO, "gameContainer");
    a.state.add("Boot", ScoobyBoo.Boot), a.state.add("Preloader", ScoobyBoo.Preloader), a.state.add("PreloaderAssets", ScoobyBoo.PreloaderAssets), a.state.add("MainMenuView", ScoobyBoo.MainMenuView), a.state.add("SelectModeView", ScoobyBoo.SelectModeView), a.state.add("SelectLevelView", ScoobyBoo.SelectLevelView), a.state.add("GameView", ScoobyBoo.GameView), a.state.start("Boot")
}, ScoobyBoo.GameModel = {
    isDesktop: !0,
    EMULATE_MOBILE: !1,
    GAME_WIDTH: 1365,
    GAME_HEIGHT: 768,
    GAME_LEVELS: 4,
    currentLevel: 1,
    currentScore: 0,
    currentPoints: 0,
    currentItemsFound: 0,
    currentMultiplier: 0,
    secondsLeft: 1,
    prevSecondsLeft: 1,
    MAX_POINTS_VALUE: 25,
    PERFECT_SCORE: 425,
    COMBO_POINTS_DELAY: 2,
    MAX_POINTS_MULTIPLIER: 5,
    GAME_WIN_SCORE: 50,
    OBJECTS_ON_SCREEN: 5,
    TOUCH_RADIUS: 30,
    gameMode: 1,
    prankDelay: 10,
    levels: {},
    tutorialInstructions: !0,
    isTimeOut: !1,
    ticTocDelay: 5,
    music: null
}, ScoobyBoo.GameModel.addScorePoints = function() {
    var a = ScoobyBoo.GameModel.secondsLeft,
        b = ScoobyBoo.GameModel.currentMultiplier,
        c = 5 * Math.floor(a / 9) + 5;
    c > ScoobyBoo.GameModel.MAX_POINTS_VALUE && (c = ScoobyBoo.GameModel.MAX_POINTS_VALUE), ScoobyBoo.GameModel.prevSecondsLeft >= 0 && (ScoobyBoo.GameModel.prevSecondsLeft - a <= ScoobyBoo.GameModel.COMBO_POINTS_DELAY ? (b++, b > ScoobyBoo.GameModel.MAX_POINTS_MULTIPLIER && (b = ScoobyBoo.GameModel.MAX_POINTS_MULTIPLIER)) : b = 1), ScoobyBoo.GameModel.prevSecondsLeft = a, console.log("on second ", a, " got ", "+", c, " x", b, " = ", c * b, ", TOTAL = ", ScoobyBoo.GameModel.currentScore + c * b), ScoobyBoo.GameModel.currentPoints = c, ScoobyBoo.GameModel.currentScore += c * b, ScoobyBoo.GameModel.currentMultiplier = b
}, ScoobyBoo.AssetsController = function(a) {
    function b() {
        var b = {};
        return b.desktop = a, a ? (b.yes = "button.texted.continue", b.no = "button.texted.reset") : (b.yes = "button.mobile.continue", b.no = "button.mobile.reset"), b
    }

    function c() {
        var b = {};
        return b.desktop = a, b.background = "mainmenu.background", b.logoImage = "sb_logo.png", b.volumeImage = "icon.volume", b.buttonPlay = "button.play", b
    }

    function d() {
        var b = {};
        return b.desktop = a, b.background = "background", b.charactersImage = "mainmenu.characters.image", b.modal = "modal.background", b.logoImage = "sb_logo.png", b.volumeImage = "icon.volume", b.buttonGameMode = "button.green.bg", b.buttonPrankMode = "button.green.bg", b.backButtonImage = "button.mobile.back", b
    }

    function e() {
        var b = {};
        return b.desktop = a, b.background = "background", b.modal = "modal.background.large", b.logoImage = "sb_logo.png", b.buttonLevel1 = "button.level1", b.buttonLevel2 = "button.level2", b.buttonLevel3 = "button.level3", b.buttonLevel4 = "button.level4", b.backButtonImage = "button.mobile.back", b.arrowLeft = "button.arrow.left", b.arrowRight = "button.arrow.right", b
    }

    function f() {
        var b = {};
        return b.desktop = a, b.background = "modal.background", b.graymask = "modal.graymask", b.continueButton = "button.green.bg", b
    }

    function g() {
        var b = {};
        return b.desktop = a, b.background = "modal.background", b.graymask = "modal.graymask", b.buttonRestart = "button.green.bg", b.buttonMainMenu = "button.green.bg", b.buttonClose = "button.close", b
    }

    function h() {
        var b = {};
        return b.desktop = a, b.background = "modal.background", b.graymask = "modal.graymask", b.buttonYes = "button.green.bg", b.buttonNo = "button.green.bg", b
    }

    function i() {
        var b = {};
        return b.desktop = a, b.background = "modal.background", b.graymask = "modal.graymask", b.buttonContinue = "button.green.bg", b
    }

    function j() {
        var b = {};
        return b.desktop = a, b.background = "background", b
    }

    function k() {
        var b = {};
        return b.desktop = a, b.bottomMenu = "gameview.bottom.panel", b.hiddenItems = "gameview.hidden.items", b.backButtonImage = "button.mobile.back", b.backButtonX = 0, b.backButtonY = 0, b.pauseButtonImage = "button.mobile.pause", b.pauseButtonX = 900, b.pauseButtonY = 0, b.gameTimerImage = "gameview.timer", b.gameTimerX = 450, b.gameTimerY = 0, b
    }

    function l() {
        var b = {};
        return b.desktop = a, b.spookyScreen = "gameview.spooky.screen", b
    }

    function m() {
        var b = {};
        return b.desktop = a, b.background = "modal.background", b.graymask = "modal.graymask", b.buttonRestart = "button.green.bg", b.buttonMainMenu = "button.green.bg", b.scoobyScared = "scooby.scared", b.shaggyScared = "shaggy.scared", b
    }

    function n() {
        var b = {};
        return b.desktop = a, b.background = "modal.background.medium", b.graymask = "modal.graymask", b.scoobyHappy = "scooby.happy", b.shaggyHappy = "shaggy.happy", b.scoobyScared = "scooby.scared", b.shaggyScared = "shaggy.scared", b.buttonRestart = "button.green.bg", b.buttonMainMenu = "button.green.bg", b
    }

    function o() {
        var b = {};
        return b.desktop = a, a ? b.background = "mainmenu.background" : b.background = "mainmenu.background", b
    }
    this.desktop = a, this.preloaderScreenData = o(), this.gameViewData = j(), this.mainMenuData = c(), this.selectModeData = d(), this.selectLevelData = e(), this.confData = b(), this.instructionsData = f(), this.pauseModalData = g(), this.exitModalData = h(), this.spookyModalData = l(), this.prankModalData = m(), this.congratsModalData = n(), this.foundItemModalData = i(), this.hudData = k()
}, ScoobyBoo.AssetsController.prototype = {
    getConfirmationData: function() {
        return this.confData
    },
    getInstructionsData: function() {
        return this.instructionsData
    },
    getPauseModalData: function() {
        return this.pauseModalData
    },
    getExitModalData: function() {
        return this.exitModalData
    },
    getMainMenuData: function() {
        return this.mainMenuData
    },
    getSelectModeData: function() {
        return this.selectModeData
    },
    getSelectLevelData: function() {
        return this.selectLevelData
    },
    getFoundItemModalData: function() {
        return this.foundItemModalData
    },
    getGameViewData: function() {
        return this.gameViewData
    },
    getHUDData: function() {
        return this.hudData
    },
    getSpookyModalData: function() {
        return this.spookyModalData
    },
    getPrankModalData: function() {
        return this.prankModalData
    },
    getCongratsModalData: function() {
        return this.congratsModalData
    },
    getPreloaderScreenData: function() {
        return this.preloaderScreenData
    },
    getPreloadAssets: function() {
        var a = [];
        return a.push({
            name: "button.texted.continue",
            path: "assets/images/button.texted.continue.png",
            type: "image"
        }), a.push({
            name: "button.mobile.play",
            path: "assets/images/HC_Button_Mobile_Play_v1.png",
            type: "image"
        }), a.push({
            name: "button.play",
            path: "assets/images/sb_play_btn.png",
            type: "spritesheet",
            w: 140,
            h: 132
        }), a.push({
            name: "button.close",
            path: "assets/images/button.close.png",
            type: "image"
        }), a.push({
            name: "button.green.bg",
            path: "assets/images/sb_green_btn.png",
            type: "image"
        }), a.push({
            name: "button.mobile.reset",
            path: "assets/images/HC_Button_Mobile_Reset_v1.png",
            type: "image"
        }), a.push({
            name: "button.mobile.continue",
            path: "assets/images/HC_Button_Mobile_Continue_v1.png",
            type: "image"
        }), a.push({
            name: "button.texted.back",
            path: "assets/images/button.texted.back.png",
            type: "image"
        }), a.push({
            name: "button.mobile.back",
            path: "assets/images/HC_Button_Mobile_Back_v1.png",
            type: "image"
        }), a.push({
            name: "button.texted.pause",
            path: "assets/images/button.texted.pause.png",
            type: "image"
        }), a.push({
            name: "button.mobile.pause",
            path: "assets/images/HC_Button_Mobile_Pause_v1.png",
            type: "image"
        }), a.push({
            name: "button.texted.reset",
            path: "assets/images/button.texted.reset.png",
            type: "image"
        }), a.push({
            name: "icon.volume",
            path: "assets/images/sb_volume_icon.png",
            type: "image"
        }), a.push({
            name: "modal.background",
            path: "assets/images/sb_modal_bg.png",
            type: "image"
        }), a.push({
            name: "modal.background.medium",
            path: "assets/images/sb_modal_medium_bg.png",
            type: "image"
        }), a.push({
            name: "modal.background.large",
            path: "assets/images/sb_modal_large_bg.png",
            type: "image"
        }), a.push({
            name: "modal.graymask",
            path: "assets/images/gray_mask.png",
            type: "image"
        }), a.push({
            name: "check.mark",
            path: "assets/images/sb_check_icon.png",
            type: "image"
        }), a.push({
            name: "levels",
            path: "assets/json/levels.json",
            type: "json"
        }), a.push({
            name: "background",
            path: "assets/images/sb_background.jpg",
            type: "image"
        }), a.push({
            name: "transparent",
            path: "assets/images/9x9transparent.png",
            type: "image"
        }), a.push({
            name: "mainmenu.background",
            path: "assets/images/sb_background_splash.jpg",
            type: "image"
        }), a.push({
            name: "sb_logo.png",
            path: "assets/images/sb_logo.png",
            type: "image"
        }), a.push({
            name: "button.level1",
            path: "assets/images/sb_button_level1.png",
            type: "spritesheet",
            w: 345,
            h: 239
        }), a.push({
            name: "button.level2",
            path: "assets/images/sb_button_level2.png",
            type: "spritesheet",
            w: 345,
            h: 239
        }), a.push({
            name: "button.level3",
            path: "assets/images/sb_button_level3.png",
            type: "spritesheet",
            w: 345,
            h: 239
        }), a.push({
            name: "button.level4",
            path: "assets/images/sb_button_level4.png",
            type: "spritesheet",
            w: 345,
            h: 239
        }), a.push({
            name: "button.arrow.left",
            path: "assets/images/sb_btn_arrow_left.png",
            type: "image"
        }), a.push({
            name: "button.arrow.right",
            path: "assets/images/sb_btn_arrow_right.png",
            type: "image"
        }), a.push({
            name: "gameview.bottom.panel",
            path: "assets/images/sb_bottom_menu.png",
            type: "image"
        }), a.push({
            name: "gameview.spooky.screen",
            path: "assets/images/sb_background_spooky.jpg",
            type: "image"
        }), a.push({
            name: "gameview.hidden.items",
            path: "assets/images/sb_hud_Tag.png",
            type: "image"
        }), a.push({
            name: "gameview.bg.cave",
            path: "assets/images/sb_background_cave_v1.jpg",
            type: "image"
        }), a.push({
            name: "gameview.bg.egypt",
            path: "assets/images/sb_background_egyption_v1.jpg",
            type: "image"
        }), a.push({
            name: "gameview.bg.winter",
            path: "assets/images/sb_background_winter_v1.jpg",
            type: "image"
        }), a.push({
            name: "gameview.bg.desert",
            path: "assets/images/sb_background_desert_v1.jpg",
            type: "image"
        }), a.push({
            name: "gameview.sparkles",
            path: "assets/images/sparkles.png",
            path_json: "assets/images/sparkles.json",
            type: "atlas"
        }), a.push({
            name: "gameview.sparkles2",
            path: "assets/images/sparkles2.png",
            path_json: "assets/images/sparkles2.json",
            type: "atlas"
        }), a.push({
            name: "sb_asset_bone.png",
            path: "assets/images/sb_asset_desert_bone.png",
            type: "image"
        }), a.push({
            name: "sb_asset_boot.png",
            path: "assets/images/sb_asset_boot.png",
            type: "image"
        }), a.push({
            name: "sb_asset_bracelet.png",
            path: "assets/images/sb_asset_bracelet.png",
            type: "image"
        }), a.push({
            name: "sb_asset_flashlight.png",
            path: "assets/images/sb_asset_flashlight.png",
            type: "image"
        }), a.push({
            name: "sb_asset_glasses.png",
            path: "assets/images/sb_asset_glasses.png",
            type: "image"
        }), a.push({
            name: "sb_asset_hat.png",
            path: "assets/images/sb_asset_hat.png",
            type: "image"
        }), a.push({
            name: "sb_asset_hotdog.png",
            path: "assets/images/sb_asset_hotdog.png",
            type: "image"
        }), a.push({
            name: "sb_asset_key.png",
            path: "assets/images/sb_asset_key.png",
            type: "image"
        }), a.push({
            name: "sb_asset_lantern.png",
            path: "assets/images/sb_asset_lantern.png",
            type: "image"
        }), a.push({
            name: "sb_asset_rope.png",
            path: "assets/images/sb_asset_rope.png",
            type: "image"
        }), a.push({
            name: "sb_asset_sandwhich.png",
            path: "assets/images/sb_asset_sandwhich.png",
            type: "image"
        }), a.push({
            name: "sb_asset_skull.png",
            path: "assets/images/sb_asset_skull.png",
            type: "image"
        }), a.push({
            name: "sb_asset_bat.png",
            path: "assets/images/sb_asset_bat.png",
            type: "image"
        }), a.push({
            name: "sb_asset_chest.png",
            path: "assets/images/sb_asset_chest.png",
            type: "image"
        }), a.push({
            name: "sb_asset_crossbones.png",
            path: "assets/images/sb_asset_crossbones.png",
            type: "image"
        }), a.push({
            name: "sb_asset_guitar.png",
            path: "assets/images/sb_asset_guitar.png",
            type: "image"
        }), a.push({
            name: "sb_asset_lock.png",
            path: "assets/images/sb_asset_lock.png",
            type: "image"
        }), a.push({
            name: "sb_asset_magnifyingGlass.png",
            path: "assets/images/sb_asset_magnifyingGlass.png",
            type: "image"
        }), a.push({
            name: "sb_asset_scoobySnacks.png",
            path: "assets/images/sb_asset_scoobySnacks.png",
            type: "image"
        }), a.push({
            name: "sb_asset_shell.png",
            path: "assets/images/sb_asset_shell.png",
            type: "image"
        }), a.push({
            name: "sb_asset_jewel.png",
            path: "assets/images/sb_asset_jewel.png",
            type: "image"
        }), a.push({
            name: "sb_asset_map.png",
            path: "assets/images/sb_asset_map.png",
            type: "image"
        }), a.push({
            name: "sb_asset_questionmark.png",
            path: "assets/images/sb_asset_questionmark.png",
            type: "image"
        }), a.push({
            name: "sb_asset_spider.png",
            path: "assets/images/sb_asset_spider.png",
            type: "image"
        }), a.push({
            name: "gameview.timer",
            path: "assets/images/game_view_timer.png",
            type: "image"
        }), a.push({
            name: "scooby.happy",
            path: "assets/images/sb_scooby_happy.png",
            type: "image"
        }), a.push({
            name: "shaggy.happy",
            path: "assets/images/sb_shaggy_happy.png",
            type: "image"
        }), a.push({
            name: "scooby.scared",
            path: "assets/images/sb_scooby_scared.png",
            type: "image"
        }), a.push({
            name: "shaggy.scared",
            path: "assets/images/sb_shaggy_scared.png",
            type: "image"
        }), a.push({
            name: "audio.generic.click",
            path: "assets/audio/audio_generic_click.mp3",
            type: "audio"
        }), a.push({
            name: "audio.rollover.click",
            path: "assets/audio/audio_rollover_click.mp3",
            type: "audio"
        }), a.push({
            name: "audio.intro",
            path: "assets/audio/audio_intro.mp3",
            type: "audio"
        }), a.push({
            name: "audio.main.loop",
            path: "assets/audio/audio_main_loop.mp3",
            type: "audio"
        }), a.push({
            name: "audio.success",
            path: "assets/audio/audio_success.mp3",
            type: "audio"
        }), a.push({
            name: "audio.tic",
            path: "assets/audio/audio_tic.mp3",
            type: "audio"
        }), a.push({
            name: "audio.toc",
            path: "assets/audio/audio_toc.mp3",
            type: "audio"
        }), a.push({
            name: "audio.item.found",
            path: "assets/audio/audio_item_found.mp3",
            type: "audio"
        }), a.push({
            name: "audio.monster.appear",
            path: "assets/audio/audio_fail_monster_appear.mp3",
            type: "audio"
        }), a.push({
            name: "audio.prank.page.appear",
            path: "assets/audio/audio_fail_prank_page_appear.mp3",
            type: "audio"
        }), a
    }
}, ScoobyBoo.Preloader = function(a) {
    this.ready = !1
}, ScoobyBoo.Preloader.prototype = {
    preload: function() {
        this.textLoading = this.game.add.text(this.game.world.centerX, 480, " ", {
            font: "20px helsinkiregular",
            fill: "#FFFFFF",
            align: "center"
        }), this.textLoading.anchor.setTo(.5, 0), this.game.load.onFileComplete.add(this.fileComplete, this), this.preloadBar = this.add.sprite(0, 0, "preloader.bar"), this.preloadBar.anchor.setTo(.5, .5), this.preloadBar.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.preloadBar.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2;
        for (var a = ScoobyBoo.GameModel.controller.getPreloadAssets(), b = 0; b < a.length; b++) {
            var c = a[b];
            switch (c.type) {
                case "json":
                    this.load.json(c.name, c.path);
                    break;
                case "image":
                    this.load.image(c.name, c.path);
                    break;
                case "spritesheet":
                    this.load.spritesheet(c.name, c.path, c.w, c.h);
                    break;
                case "atlas":
                    this.load.atlas(c.name, c.path, c.path_json, null, Phaser.Loader.TEXTURE_ATLAS_JSON_ARRAY);
                    break;
                case "audio":
                    this.load.audio(c.name, c.path)
            }
        }
        this.tween = this.game.add.tween(this.preloadBar).to({
            rotation: 2 * Math.PI
        }, 1e3, "Linear", !0, 0, 999)
    },
    create: function() {
        this.tween.stop(), this.game.state.start("MainMenuView")
    },
    fileComplete: function(a, b, c, d, e) {
        this.textLoading.setText("Loading " + d + "/" + e + "... ")
    }
}, ScoobyBoo.PreloaderAssets = function(a) {
    this.ready = !1
}, ScoobyBoo.PreloaderAssets.prototype = {
    preload: function() {
        ScoobyBoo.GameModel.BACKGROUND.addToWorld();
        var a = this.add.sprite(0, 0, "preloader.bar");
        a.anchor.setTo(.5, .5), a.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, a.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2, this.tween = this.game.add.tween(a).to({
            rotation: 2 * Math.PI
        }, 1e3, "Linear", !0, 0, 999)
    },
    create: function() {
        this.tween.stop(), ScoobyBoo.GameModel.setGameData(this.game.cache.getJSON("data")), this.game.state.start("GameView")
    }
};
var LabelButton = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    Phaser.Button.call(this, a, b, c, d, f, g, h, i, j, k), this.setStateFrame("Disabled", m), this.input.useHandCursor = !0, this.disabled = !1, this.mouseIsOver = !1, this.events.onInputOver.add(function() {
        this.mouseIsOver = !0
    }, this), this.events.onInputOut.add(function() {
        this.mouseIsOver = !1
    }, this), l ? this.style = l : this.style = {
        font: "36px helsinkiregular",
        fill: "white",
        stroke: "#2F2F2F",
        strokeThickness: 6
    }, n ? this.styleDisabled = n : this.styleDisabled = {
        font: "36px helsinkiregular",
        fill: "blue",
        stroke: "#2F2F2F",
        strokeThickness: 6
    }, this.anchor.setTo(.5, .5), this.label = new Phaser.Text(a, 0, 0, e, this.style), this.label.anchor.setTo(.5, .5), this.label.y = 3, this.addChild(this.label), this.setLabel(e), a.add.existing(this)
};
LabelButton.prototype = Object.create(Phaser.Button.prototype), LabelButton.prototype.constructor = LabelButton, LabelButton.prototype.setLabel = function(a, b) {
    b && (this.label.x += b), this.label.setText(a + " ")
}, LabelButton.prototype.disable = function() {
    this.disabled || (this.disabled = !0, this.changeStateFrame("Disabled"), this.input.useHandCursor = !1, this.freezeFrames = !0, this.label.setStyle(this.styleDisabled))
}, LabelButton.prototype.enable = function() {
    this.disabled && (this.disabled = !1, this.freezeFrames = !1, this.input.useHandCursor = !0, this.changeStateFrame(this.mouseIsOver ? "Over" : "Out"), this.label.setStyle(this.style))
}, ScoobyBoo.ConfirmationAsset = function(a, b) {
    Phaser.Group.call(this, a), this.onConfirm = new Phaser.Signal, this.onCancel = new Phaser.Signal, this.init(b)
}, Utils.extend(ScoobyBoo.ConfirmationAsset, Phaser.Group), ScoobyBoo.ConfirmationAsset.prototype.init = function(a) {
    var b, c = ScoobyBoo.GameModel.controller.getConfirmationData(),
        d = this.game.add.bitmapData(ScoobyBoo.GameModel.GAME_WIDTH, ScoobyBoo.GameModel.GAME_HEIGHT);
    d.ctx.beginPath(), d.ctx.rect(0, 0, ScoobyBoo.GameModel.GAME_WIDTH, ScoobyBoo.GameModel.GAME_HEIGHT), d.ctx.fillStyle = "#000000", d.ctx.fill(), b = this.game.add.sprite(0, 0, d), b.inputEnabled = !0, b.alpha = ScoobyBoo.GameModel.INACTIVE_ALPHA, this.add(b), this.style = {
        font: "27px Arial",
        fontStyle: "italic",
        fontWeight: "bold",
        fill: "#ffffff"
    };
    var e = this.game.make.sprite(0, 0, "modal.background");
    e.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - e.width / 2, e.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - e.height / 2, this.add(e), this.label = new Phaser.Text(this.game, 0, 0, a, this.style), this.label.align = "center", this.label.anchor.setTo(.5, .5), this.label.position.setTo(ScoobyBoo.GameModel.GAME_WIDTH / 2, ScoobyBoo.GameModel.GAME_HEIGHT / 2 - 30), this.add(this.label), c.desktop ? (this.yes = new LabelButton(this.game, 0, 0, c.yes, "YES", this.onYes, this, 1, 0, 0), this.no = new LabelButton(this.game, 0, 0, c.no, "NO", this.onNo, this, 1, 0, 0)) : (this.yes = this.game.add.button(0, 0, c.yes, this.onYes, this, 1, 0, 0), this.no = this.game.add.button(0, 0, c.no, this.onNo, this, 1, 0, 0));
    var f = this.yes.width + 20 + this.no.width;
    this.no.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - f / 2 + (c.desktop ? this.no.width / 2 : 0), this.yes.x = this.no.x + this.no.width + 20, this.yes.y = this.no.y = this.label.y + this.label.height, this.add(this.yes), this.add(this.no), this.audioGenericClick = this.game.add.audio("audio.generic.click")
}, ScoobyBoo.ConfirmationAsset.prototype.onYes = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onConfirm.dispatch(this), this.destroy()
}, ScoobyBoo.ConfirmationAsset.prototype.onNo = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onCancel.dispatch(this), this.destroy()
}, ScoobyBoo.MainMenuView = function(a) {}, ScoobyBoo.MainMenuView.prototype = {
    create: function() {
        var a = ScoobyBoo.GameModel.controller.getMainMenuData();
        this.bg = this.game.add.sprite(0, 0, a.background), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2, this.logoImage = this.game.add.sprite(0, 0, a.logoImage), this.logoImage.anchor.setTo(.5, 0), this.logoImage.x = ScoobyBoo.GameModel.GAME_WIDTH / 2;
        var b = {
            font: "60px helsinkiregular",
            fill: "#FFFFFF"
        };
        this.message1 = new Phaser.Text(this.game, 0, 0, "SEARCH 'N SCARE ", b), this.add.existing(this.message1), this.message1.anchor.setTo(.5, .5), this.message1.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.message1.y = this.logoImage.y + this.logoImage.height + 30, this.buttonPlay = this.game.add.button(0, 0, a.buttonPlay, this.onPlayButtonClick, this, 0, 1, 0), this.buttonPlay.input.useHandCursor = !0, this.buttonPlay.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.buttonPlay.width / 2, this.buttonPlay.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.buttonPlay.height / 2 - 20, this.buttonPlay.events.onInputOver.add(this.onButtonRollout, this), this.buttonPlay.events.onInputOut.add(this.onButtonRollout, this), ScoobyBoo.GameModel.levels = this.game.cache.getJSON("levels").levels, ScoobyBoo.GameModel.currentLevel = 1, this.audioRolloverClick = this.add.audio("audio.rollover.click"), this.audioGenericClick = this.add.audio("audio.generic.click"), ScoobyBoo.GameModel.music && (ScoobyBoo.GameModel.music.stop(), ScoobyBoo.GameModel.music = null), ScoobyBoo.GameModel.music = this.add.audio("audio.intro", 1, !0), this.game.sound.mute || ScoobyBoo.GameModel.music.play()
    }
}, ScoobyBoo.MainMenuView.prototype.onButtonRollout = function() {
    this.game.sound.mute || this.audioRolloverClick.play()
}, ScoobyBoo.MainMenuView.prototype.onPlayButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.game.state.start("SelectModeView")
}, ScoobyBoo.SelectModeView = function(a) {}, ScoobyBoo.SelectModeView.prototype = {
    create: function() {
        var a = ScoobyBoo.GameModel.controller.getSelectModeData();
        this.bg = this.game.add.sprite(0, 0, a.background), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2, this.logoImage = this.game.add.sprite(0, 0, a.logoImage), this.logoImage.anchor.setTo(.5, 0), this.logoImage.x = ScoobyBoo.GameModel.GAME_WIDTH / 2;
        var b = {
            font: "25px helsinkiregular",
            fill: "#FFFFFF"
        };
        this.message = new Phaser.Text(this.game, 0, 0, "MAKE SURE THE VOLUME IS ON ", b), this.add.existing(this.message), this.message.anchor.setTo(.5, .5), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.message.y = this.logoImage.y + this.logoImage.height + 40, this.volumeImage = this.game.add.sprite(0, 0, a.volumeImage), this.volumeImage.anchor.setTo(.5, .5), this.message.x += this.volumeImage.width / 2, this.volumeImage.x = this.message.x - this.message.width / 2 - this.volumeImage.width / 2 - 10, this.volumeImage.y = this.message.y, this.modal = this.game.add.sprite(0, 0, a.modal), this.modal.anchor.setTo(.5, .5), this.modal.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.modal.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 + 50;
        var c = {
            font: "50px helsinkiregular",
            fill: "#FFFFFF",
            stroke: "#2F2F2F",
            strokeThickness: 6
        };
        this.message = new Phaser.Text(this.game, 0, 0, "SELECT A MODE ", c), this.add.existing(this.message), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.message.width / 2, this.message.y = this.modal.y - this.modal.height / 2 + 48, this.buttonPrankMode = new LabelButton(this.game, 0, 0, a.buttonPrankMode, "", this.onButtonPrankModeClick, this, 1, 0, 0), this.buttonPrankMode.setLabel("PRANK ", 20), this.add.existing(this.buttonPrankMode), this.buttonPrankMode.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonPrankMode.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.buttonPrankMode.height / 2 + 80, this.buttonPrankMode.inputEnabled = !0, this.buttonPrankMode.input.priorityID = 5, this.buttonGameMode = new LabelButton(this.game, 0, 0, a.buttonGameMode, "", this.onButtonGameModeClick, this, 1, 0, 0), this.buttonGameMode.setLabel("NORMAL ", 20), this.add.existing(this.buttonGameMode), this.buttonGameMode.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonGameMode.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 + this.buttonGameMode.height / 2 + 100, this.buttonGameMode.inputEnabled = !0, this.buttonGameMode.input.priorityID = 5, this.backButton = this.game.add.button(0, 0, a.backButtonImage, this.onBackButtonClick, this, 1, 0, 0), this.backButton.input.useHandCursor = !0, this.backButton.inputEnabled = !0, this.backButton.input.priorityID = 5, ScoobyBoo.GameModel.gameMode = 1, this.audioGenericClick = this.add.audio("audio.generic.click")
    }
}, ScoobyBoo.SelectModeView.prototype.onButtonGameModeClick = function() {
    ScoobyBoo.GameModel.gameMode = 1, this.game.sound.mute || this.audioGenericClick.play(), this.game.state.start("SelectLevelView")
}, ScoobyBoo.SelectModeView.prototype.onButtonPrankModeClick = function() {
    ScoobyBoo.GameModel.gameMode = 2, this.game.sound.mute || this.audioGenericClick.play(), this.game.state.start("SelectLevelView")
}, ScoobyBoo.SelectModeView.prototype.onBackButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.game.state.start("MainMenuView")
}, ScoobyBoo.SelectLevelView = function(a) {}, ScoobyBoo.SelectLevelView.prototype = {
    create: function() {
        this.GAP = 10;
        var a = ScoobyBoo.GameModel.controller.getSelectLevelData();
        this.bg = this.game.add.sprite(0, 0, a.background), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2, this.logoImage = this.game.add.sprite(0, 0, a.logoImage), this.logoImage.anchor.setTo(.5, 0), this.logoImage.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.modal = this.game.add.sprite(0, 0, a.modal), this.modal.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.modal.width / 2, this.modal.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 + 50 - this.modal.height / 2, this.listLayer = this.game.add.group(), this.modal.addChild(this.listLayer), this.listLayer.x = 80, this.listLayer.y = 120, this.cellLayer = this.game.add.group(), this.listLayer.addChild(this.cellLayer), this.arrowLeft = this.game.add.button(0, 0, a.arrowLeft, this.onButtonArrowLeftClick, this, 0, 1, 0), this.modal.addChild(this.arrowLeft), this.arrowLeft.x = -this.arrowLeft.width / 2 + this.GAP, this.arrowLeft.y = this.modal.height / 2 - this.arrowLeft.height / 2 + 2 * this.GAP, this.arrowLeft.inputEnabled = !0, this.arrowLeft.input.priorityID = 5, this.arrowRight = this.game.add.button(0, 0, a.arrowRight, this.onButtonArrowRightClick, this, 0, 1, 0), this.modal.addChild(this.arrowRight), this.arrowRight.x = this.modal.width - this.arrowRight.width / 2, this.arrowRight.y = this.modal.height / 2 - this.arrowRight.height / 2 + 2 * this.GAP, this.arrowRight.inputEnabled = !0, this.arrowRight.input.priorityID = 5;
        var b = {
            font: "50px helsinkiregular",
            fill: "#FFFFFF",
            stroke: "#2F2F2F",
            strokeThickness: 6
        };
        this.message = new Phaser.Text(this.game, 0, 0, "SELECT A LEVEL ", b), this.add.existing(this.message), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.message.width / 2, this.message.y = this.modal.y + 40;
        for (var c = 1; c <= ScoobyBoo.GameModel.GAME_LEVELS; c++) this["buttonLevel" + c] = this.createButtonLevel(c), this.cellLayer.addChild(this["buttonLevel" + c]);
        this.maskGraphic = this.game.make.graphics(0, 0), this.maskGraphic.beginFill(0, 1), this.maskGraphic.drawRect(0, 0, 2 * this.buttonLevel1.width + this.GAP, this.buttonLevel1.height), this.maskGraphic.endFill(), this.listLayer.addChild(this.maskGraphic), this.listLayer.mask = this.maskGraphic, this.currentLevel = 1, this.updateLevelButtons(), this.backButton = this.game.add.button(0, 0, a.backButtonImage, this.onBackButtonClick, this, 1, 0, 0), this.backButton.input.useHandCursor = !0, this.backButton.inputEnabled = !0, this.backButton.input.priorityID = 5, this.audioRolloverClick = this.add.audio("audio.rollover.click"), this.audioGenericClick = this.add.audio("audio.generic.click")
    }
}, ScoobyBoo.SelectLevelView.prototype.createButtonLevel = function(a) {
    var b = ScoobyBoo.GameModel.controller.getSelectLevelData(),
        c = this.game.add.button(0, 0, b["buttonLevel" + a], this.onButtonLevelClick, this, 0, 1, 0);
    return null == this.buttonLevel1 ? c.x = 0 : c.x = (a - 1) * (this.buttonLevel1.width + this.GAP), c.y = 0, c.input.priorityID = 5, c.events.onInputOver.add(this.onButtonRollOut, this), c.events.onInputOut.add(this.onButtonRollOut, this), c
}, ScoobyBoo.SelectLevelView.prototype.onButtonRollOut = function() {
    this.game.sound.mute || this.audioRolloverClick.play()
}, ScoobyBoo.SelectLevelView.prototype.onButtonArrowLeftClick = function() {
    if (this.currentLevel > 1) {
        this.currentLevel--, this.disableLevelButtons();
        var a = this.cellLayer.x + this.buttonLevel1.width + this.GAP;
        this.tween = this.game.add.tween(this.cellLayer).to({
            x: a
        }, 200, "Linear", !0), this.tween.onComplete.add(this.updateLevelButtons, this)
    }
    this.game.sound.mute || this.audioRolloverClick.play()
}, ScoobyBoo.SelectLevelView.prototype.onButtonArrowRightClick = function() {
    if (this.currentLevel < ScoobyBoo.GameModel.GAME_LEVELS - 1) {
        this.currentLevel++, this.disableLevelButtons();
        var a = this.cellLayer.x - this.buttonLevel1.width - this.GAP;
        this.tween = this.game.add.tween(this.cellLayer).to({
            x: a
        }, 200, "Linear", !0), this.tween.onComplete.add(this.updateLevelButtons, this)
    }
    this.game.sound.mute || this.audioRolloverClick.play()
}, ScoobyBoo.SelectLevelView.prototype.updateLevelButtons = function() {
    for (var a = 1; a <= ScoobyBoo.GameModel.GAME_LEVELS; a++) this["buttonLevel" + a].inputEnabled = a == this.currentLevel || a == this.currentLevel + 1, this["buttonLevel" + a].input.useHandCursor = this["buttonLevel" + a].inputEnabled;
    this.currentLevel <= 1 ? (this.arrowLeft.alpha = .5, this.arrowLeft.inputEnabled = !1, this.arrowLeft.input.useHandCursor = !1) : (this.arrowLeft.alpha = 1, this.arrowLeft.inputEnabled = !0, this.arrowLeft.input.useHandCursor = !0), this.currentLevel >= ScoobyBoo.GameModel.GAME_LEVELS - 1 ? (this.arrowRight.alpha = .5, this.arrowRight.inputEnabled = !1, this.arrowRight.input.useHandCursor = !1) : (this.arrowRight.alpha = 1, this.arrowRight.inputEnabled = !0, this.arrowRight.input.useHandCursor = !0)
}, ScoobyBoo.SelectLevelView.prototype.disableLevelButtons = function() {
    for (var a = 1; a <= ScoobyBoo.GameModel.GAME_LEVELS; a++) this["buttonLevel" + a].inputEnabled = !1
}, ScoobyBoo.SelectLevelView.prototype.onButtonLevelClick = function(a) {
    ScoobyBoo.GameModel.currentLevel = a.key.replace("button.level", ""), this.game.sound.mute || this.audioRolloverClick.play(), this.game.state.start("GameView")
}, ScoobyBoo.SelectLevelView.prototype.onBackButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.game.state.start("SelectModeView")
}, ScoobyBoo.GameView = function(a) {
    ScoobyBoo.GameModel.isVerticalMode = null
}, ScoobyBoo.GameView.prototype = {
    create: function() {
        ScoobyBoo.GameModel.controller.getGameViewData();
        this.backgroundLayer = this.game.add.group(), this.objectsLayer = this.game.add.group(), this.HUDLayer = this.game.add.group(), this.menuLayer = this.game.add.group(), this.touchAreaLayer = this.game.add.group(), this.bg = this.backgroundLayer.create(0, 0, ScoobyBoo.GameModel.levels[ScoobyBoo.GameModel.currentLevel].background), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2, this.touchArea = this.game.add.sprite(0, 0), this.touchArea.width = this.game.width, this.touchArea.height = this.game.height, this.touchArea.inputEnabled = !0, this.touchArea.input.priorityID = 1, this.touchArea.events.onInputDown.add(this.onClickTouchArea, this), this.hudModal = new ScoobyBoo.HUDModal(this.game), this.hudModal.onBackButton.add(this.onBackButtonClick, this), this.hudModal.onPauseButton.add(this.onPauseButtonClick, this), this.hudModal.onTimeOut.add(this.onTimeOut, this), ScoobyBoo.GameModel.isTimeOut = !1, this.levelObjects = ScoobyBoo.GameModel.levels[ScoobyBoo.GameModel.currentLevel].objects.concat(), this.menuObjects = [];
        var a = Utils.getRand(0, this.levelObjects.length),
            b = a,
            c = 13;
        const d = ScoobyBoo.GameModel.OBJECTS_ON_SCREEN;
        for (var e = 0; d > e; e++) {
            var f = this.levelObjects[b],
                g = this.createObjectData(f, e),
                h = new BaseGameObject;
            g.gameObjectRef = h, h.init(g), this.menuObjects.push(h), b += c, b >= this.levelObjects.length && (b %= this.levelObjects.length)
        }
        if (2 == ScoobyBoo.GameModel.gameMode) {
            var i = Utils.getRand(0, d);
            h = this.menuObjects[i], g = h.objectData, f = ScoobyBoo.GameModel.levels[ScoobyBoo.GameModel.currentLevel].prank_object, g = this.createObjectData(f, i), h.destroy(), h = null, h = new BaseGameObject, g.gameObjectRef = h, h.init(g), this.menuObjects[i] = h
        }
        this.touchAreaLayer.add(this.touchArea), this.HUDLayer.add(this.hudModal), this.add.existing(this.menuLayer), this.instructionsModal = new ScoobyBoo.InstructionsModal(this.game), this.add.existing(this.instructionsModal), this.instructionsModal.onContinue.add(this.onInstructionsClose, this), ScoobyBoo.GameModel.tutorialInstructions ? this.instructionsModal.show() : this.playMusic(), this.pauseModal = new ScoobyBoo.PauseModal(this.game), this.add.existing(this.pauseModal), this.pauseModal.onRestartButton.add(this.onRestartHandler, this), this.pauseModal.onMainMenuButton.add(this.onMainMenuHandler, this), this.pauseModal.onCloseButton.add(this.onCancelHandler, this), this.pauseModal.hide(), this.exitModal = new ScoobyBoo.ExitModal(this.game), this.add.existing(this.exitModal), this.exitModal.onYesButton.add(this.onSelectSceneHandler, this), this.exitModal.onNoButton.add(this.onCancelHandler, this), this.exitModal.hide(), this.spookyModal = new ScoobyBoo.SpookyModal(this.game), this.add.existing(this.spookyModal), this.spookyModal.hide(), this.prankModal = new ScoobyBoo.PrankModal(this.game), this.add.existing(this.prankModal), this.prankModal.onRestartButton.add(this.onRestartHandler, this), this.prankModal.onMainMenuButton.add(this.onMainMenuHandler, this), this.prankModal.hide(), this.congratsModal = new ScoobyBoo.CongratsModal(this.game), this.add.existing(this.congratsModal), this.congratsModal.onPlayAgainButton.add(this.onSelectSceneHandler, this), this.congratsModal.onMainMenuButton.add(this.onMainMenuHandler, this), this.congratsModal.hide(), ScoobyBoo.GameModel.currentItemsFound = 0, this.audioGenericClick = this.add.audio("audio.generic.click"), this.audioItemFound = this.add.audio("audio.item.found"), ScoobyBoo.GameModel.currentScore = 0, ScoobyBoo.GameModel.prevSecondsLeft = ScoobyBoo.GameModel.secondsLeft, ScoobyBoo.GameModel.currentMultiplier = 0, this.hudModal.startTimer(ScoobyBoo.GameModel.levels[ScoobyBoo.GameModel.currentLevel].seconds), ScoobyBoo.GameModel.tutorialInstructions ? this.hudModal.stopTimer() : {}, this.isGameWon = !1
    },
    update: function() {}
}, ScoobyBoo.GameView.prototype.createObjectData = function(a, b) {
    var c = {};
    c.objectsLayer = this.objectsLayer, c.menuLayer = this.menuLayer, c.game = this.game, c.sceneAsset = a.scene_asset, c.itemName = a.item_name, c.sceneX = a.x, c.sceneY = a.y, c.halfWidth = a.half_width, c.halfHeight = a.half_height, c.menuAsset = a.menu_asset;
    const d = ScoobyBoo.GameModel.OBJECTS_ON_SCREEN;
    return c.menuX = ScoobyBoo.GameModel.GAME_WIDTH / d * b + ScoobyBoo.GameModel.GAME_WIDTH / d / 2, c.menuY = this.hudModal.bottomMenu.y + this.hudModal.bottomMenu.height / 2 + 30 - 30 / d * b, c.menuIndex = b, c
}, ScoobyBoo.GameView.prototype.onClickTouchArea = function(a, b, c) {
    console.log("touched " + b.position.x + ":" + b.position.y);
    for (var d = 0; d < this.menuObjects.length; d++) {
        var e = this.menuObjects[d];
        if (!(e.menuView.alpha < 1)) {
            var f = ScoobyBoo.GameModel.isDesktop ? e.objectData.halfWidth : ScoobyBoo.GameModel.TOUCH_RADIUS,
                g = ScoobyBoo.GameModel.isDesktop ? e.objectData.halfHeight : ScoobyBoo.GameModel.TOUCH_RADIUS;
            Math.abs(e.sceneView.x - b.position.x) <= f && Math.abs(e.sceneView.y - b.position.y) <= g && (console.log("Got item!"), ScoobyBoo.GameModel.currentItemsFound++, ScoobyBoo.GameModel.addScorePoints(), this.game.sound.mute || this.audioItemFound.play(), e.sceneView.visible = !1, e.menuView.alpha = .5, this.checkGameWin(), this.showCheckMark(e), this.showSparkle(e), this.showMultiplier(e))
        }
    }
}, ScoobyBoo.GameView.prototype.showCheckMark = function(a) {
    var b = this.game.add.sprite(a.menuView.x, a.menuView.y, "check.mark");
    b.anchor.setTo(.5, .5), this.menuLayer.add(b)
}, ScoobyBoo.GameView.prototype.showSparkle = function(a) {
    var b = this.menuLayer.create(a.sceneView.x, a.sceneView.y - 10, "gameview.sparkles");
    b.anchor.setTo(.5, .5);
    var c = b.animations.add("idle");
    c.onComplete.add(function() {
        b && this.menuLayer && (this.menuLayer.removeChild(b), b.destroy(), b = null)
    }, this), b.animations.play("idle")
}, ScoobyBoo.GameView.prototype.showMultiplier = function(a) {
    var b = ScoobyBoo.GameModel.currentPoints.toString() + " ";
    ScoobyBoo.GameModel.currentMultiplier > 1 && (b += "x" + ScoobyBoo.GameModel.currentMultiplier + " ");
    var c = {
            font: "60px helsinkiregular",
            fill: "#FFFFFF",
            stroke: "#2F2F2F",
            strokeThickness: 6
        },
        d = new Phaser.Text(this.game, 0, 0, b, c);
    this.menuLayer.addChild(d), d.anchor.setTo(.5, .5), d.y = a.sceneView.y, d.x = a.sceneView.x;
    var e = this.game.add.tween(d).to({
        y: d.y - 50
    }, 500, Phaser.Easing.Linear.NONE, !0);
    e.onComplete.addOnce(function() {
        d && this.menuLayer && (this.menuLayer.removeChild(d), d.destroy(), d = null)
    }, this)
}, ScoobyBoo.GameView.prototype.onTimeOut = function() {
    this.touchArea.events.onInputDown.removeAll(), this.isGameWon || (this.stopMusic(), 1 == ScoobyBoo.GameModel.gameMode ? this.showGameOver() : (this.spookyModal.show(), this.intervalId = this.game.time.events.loop(3 * Phaser.Timer.SECOND, this.showPrankModal, this)))
}, ScoobyBoo.GameView.prototype.showPrankModal = function() {
    this.game.time.events.remove(this.intervalId), ScoobyBoo.GameModel.music = this.add.audio("audio.intro", 1, !0), this.game.sound.mute || ScoobyBoo.GameModel.music.play(), this.spookyModal.hide(), this.prankModal.show()
}, ScoobyBoo.GameView.prototype.onInstructionsClose = function() {
    this.hudModal.resumeTimer(), this.playMusic()
}, ScoobyBoo.GameView.prototype.stopMusic = function() {
    ScoobyBoo.GameModel.music && (ScoobyBoo.GameModel.music.stop(), ScoobyBoo.GameModel.music = null)
}, ScoobyBoo.GameView.prototype.playMusic = function() {
    this.stopMusic(), ScoobyBoo.GameModel.music = this.add.audio("audio.main.loop", 1, !0), this.game.sound.mute || ScoobyBoo.GameModel.music.play()
}, ScoobyBoo.GameView.prototype.onBackButtonClick = function() {
    this.hudModal.stopTimer(), this.exitModal.show()
}, ScoobyBoo.GameView.prototype.onPauseButtonClick = function() {
    this.hudModal.stopTimer(), this.pauseModal.show()
}, ScoobyBoo.GameView.prototype.onRestartHandler = function() {
    this.game.state.start("GameView")
}, ScoobyBoo.GameView.prototype.onSelectSceneHandler = function() {
    this.game.state.start("SelectLevelView")
}, ScoobyBoo.GameView.prototype.onMainMenuHandler = function() {
    this.game.state.start("MainMenuView")
}, ScoobyBoo.GameView.prototype.checkGameWin = function() {
    return ScoobyBoo.GameModel.currentItemsFound >= this.menuObjects.length ? (this.isGameWon = !0, this.hudModal.stopTimer(), this.intervalId = this.game.time.events.loop(2 * Phaser.Timer.SECOND, this.showGameWin, this), !0) : !1
}, ScoobyBoo.GameView.prototype.onCancelHandler = function() {
    this.hudModal.resumeTimer()
}, ScoobyBoo.GameView.prototype.showGameWin = function() {
    this.game.time.events.remove(this.intervalId), console.log("on Game Win got ", ScoobyBoo.GameModel.GAME_WIN_SCORE, " TOTAL =", ScoobyBoo.GameModel.currentScore + ScoobyBoo.GameModel.GAME_WIN_SCORE), ScoobyBoo.GameModel.currentScore += ScoobyBoo.GameModel.GAME_WIN_SCORE, this.congratsModal.show()
}, ScoobyBoo.GameView.prototype.showGameOver = function() {
    console.log("on Game Over got 0, TOTAL =", ScoobyBoo.GameModel.currentScore), this.congratsModal.show()
}, BaseGameObject = function() {}, BaseGameObject.prototype = {
    init: function(a) {
        this.objectData = a, this.game = a.game, this.getObjectRef = a.gameObjectRef, a.sceneAsset ? this.sceneView = a.objectsLayer.create(0, 0, a.sceneAsset) : this.sceneView = a.objectsLayer.create(0, 0, "transparent"), this.sceneView.anchor.setTo(.5, .5), this.sceneView.x = a.sceneX, this.sceneView.y = a.sceneY, a.menuAsset && (this.menuView = a.menuLayer.create(0, 0, a.menuAsset), this.menuView.anchor.setTo(.5, .5), this.menuView.x = a.menuX, this.menuView.y = a.menuY)
    },
    update: function() {},
    sceneView: function() {
        return this.sceneView
    },
    menuView: function() {
        return this.menuView
    },
    objectData: function() {
        return this.objectData
    },
    destroy: function() {
        this.objectData.objectsLayer && this.sceneView && this.objectData.objectsLayer.removeChild(this.sceneView), this.objectData.menuLayer && this.menuView && this.objectData.menuLayer.removeChild(this.menuView), this.sceneView = null, this.menuView = null, this.objectData = null
    }
}, ScoobyBoo.InstructionsModal = function(a) {
    Phaser.Group.call(this, a), this.init(), this.onContinue = new Phaser.Signal
}, Utils.extend(ScoobyBoo.InstructionsModal, Phaser.Group), ScoobyBoo.InstructionsModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getInstructionsData();
    this.graymask = this.game.add.sprite(0, 0, a.graymask), this.add(this.graymask), this.graymask.inputEnabled = !0, this.graymask.input.priorityID = 4, this.bg = this.game.add.sprite(0, 0, a.background), this.add(this.bg), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2 - 80;
    var b = {
        font: "50px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.title = new Phaser.Text(this.game, 0, 0, "INSTRUCTIONS ", b), this.add(this.title), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.title.width / 2, this.title.y = this.bg.y + 50;
    var c = {
        font: "20px helsinkiregular",
        fill: "#FFFFFF",
        wordWrap: !0,
        wordWrapWidth: 300,
        align: "center"
    };
    this.message = new Phaser.Text(this.game, 0, 0, "FIND ALL THE OBJECTS BEFORE IT'S TOO LATE!", c), this.add(this.message), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.message.width / 2, this.message.y = this.title.y + this.title.height + 10, this.continueButton = new LabelButton(this.game, 0, 0, a.continueButton, "", this.onContinueButtonClick, this, 1, 0, 0), this.continueButton.setLabel("CONTINUE ", 10), this.add(this.continueButton), this.continueButton.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.continueButton.y = this.bg.y + 270, this.continueButton.inputEnabled = !0, this.continueButton.input.priorityID = 5, this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.hide()
}, ScoobyBoo.InstructionsModal.prototype.show = function() {
    this.y = 0
}, ScoobyBoo.InstructionsModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.InstructionsModal.prototype.onContinueButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), ScoobyBoo.GameModel.tutorialInstructions = !1, this.y = -1e3, this.onContinue.dispatch(this)
}, ScoobyBoo.PauseModal = function(a) {
    Phaser.Group.call(this, a), this.init(), this.onRestartButton = new Phaser.Signal, this.onMainMenuButton = new Phaser.Signal, this.onCloseButton = new Phaser.Signal
}, Utils.extend(ScoobyBoo.PauseModal, Phaser.Group), ScoobyBoo.PauseModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getPauseModalData();
    this.graymask = this.game.add.sprite(0, 0, a.graymask), this.add(this.graymask), this.graymask.inputEnabled = !0, this.graymask.input.priorityID = 4, this.bg = this.game.add.sprite(0, 0, a.background), this.add(this.bg), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2 - 80;
    var b = {
        font: "50px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.title = new Phaser.Text(this.game, 0, 0, "GAME PAUSED ", b), this.add(this.title), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.title.width / 2, this.title.y = this.bg.y + 60, this.buttonRestart = new LabelButton(this.game, 0, 0, a.buttonRestart, "", this.onRestartButtonClick, this, 1, 0, 0), this.buttonRestart.setLabel("RESTART GAME  ", 10), this.add(this.buttonRestart), this.buttonRestart.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonRestart.y = this.bg.y + 175, this.buttonRestart.inputEnabled = !0, this.buttonRestart.input.priorityID = 5, this.buttonMainMenu = new LabelButton(this.game, 0, 0, a.buttonMainMenu, "", this.onMainMenuButtonClick, this, 1, 0, 0), this.buttonMainMenu.setLabel("MAIN MENU  ", 10), this.add(this.buttonMainMenu), this.buttonMainMenu.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonMainMenu.y = this.bg.y + 260, this.buttonMainMenu.inputEnabled = !0, this.buttonMainMenu.input.priorityID = 5, this.buttonClose = this.game.add.button(0, 0, a.buttonClose, this.onCloseButtonClick, this, 1, 0, 0), this.add(this.buttonClose), this.buttonClose.input.useHandCursor = !0, this.buttonClose.x = ScoobyBoo.GameModel.GAME_WIDTH - this.buttonClose.width, this.buttonClose.y = 0, this.buttonClose.inputEnabled = !0, this.buttonClose.input.priorityID = 5, this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.hide()
}, ScoobyBoo.PauseModal.prototype.show = function() {
    this.y = 0
}, ScoobyBoo.PauseModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.PauseModal.prototype.onRestartButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onRestartButton.dispatch(this)
}, ScoobyBoo.PauseModal.prototype.onMainMenuButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onMainMenuButton.dispatch(this)
}, ScoobyBoo.PauseModal.prototype.onCloseButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onCloseButton.dispatch(this)
}, ScoobyBoo.ExitModal = function(a) {
    Phaser.Group.call(this, a), this.init(), this.onYesButton = new Phaser.Signal, this.onNoButton = new Phaser.Signal
}, Utils.extend(ScoobyBoo.ExitModal, Phaser.Group), ScoobyBoo.ExitModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getExitModalData();
    this.graymask = this.game.add.sprite(0, 0, a.graymask), this.add(this.graymask), this.graymask.inputEnabled = !0, this.graymask.input.priorityID = 4, this.bg = this.game.add.sprite(0, 0, a.background), this.add(this.bg), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2;
    var b = {
        font: "50px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.title = new Phaser.Text(this.game, 0, 0, " LEAVE THE GAME? ", b), this.add(this.title), this.title.anchor.setTo(.5, 0), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.title.y = this.bg.y + 60, this.buttonYes = new LabelButton(this.game, 0, 0, a.buttonYes, "", this.onYesButtonClick, this, 1, 0, 0), this.buttonYes.setLabel("YES  ", 30), this.add(this.buttonYes), this.buttonYes.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonYes.y = this.bg.y + 180, this.buttonYes.inputEnabled = !0, this.buttonYes.input.priorityID = 5, this.buttonNo = new LabelButton(this.game, 0, 0, a.buttonNo, "", this.onNoButtonClick, this, 1, 0, 0), this.buttonNo.setLabel("NO  ", 30), this.add(this.buttonNo), this.buttonNo.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonNo.y = this.bg.y + 260, this.buttonNo.inputEnabled = !0, this.buttonNo.input.priorityID = 5, this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.hide()
}, ScoobyBoo.ExitModal.prototype.show = function() {
    this.y = 0
}, ScoobyBoo.ExitModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.ExitModal.prototype.onYesButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onYesButton.dispatch(this)
}, ScoobyBoo.ExitModal.prototype.onNoButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onNoButton.dispatch(this)
}, ScoobyBoo.SpookyModal = function(a) {
    Phaser.Group.call(this, a), this.init()
}, Utils.extend(ScoobyBoo.SpookyModal, Phaser.Group), ScoobyBoo.SpookyModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getSpookyModalData();
    this.spookyScreen = this.game.add.sprite(0, 0, a.spookyScreen), this.spookyScreen.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.spookyScreen.width / 2, this.add(this.spookyScreen), this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.audioMonster = this.game.add.audio("audio.monster.appear"), this.hide()
}, ScoobyBoo.SpookyModal.prototype.show = function() {
    this.game.sound.mute || this.audioMonster.play(), this.y = 0
}, ScoobyBoo.SpookyModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.PrankModal = function(a) {
    Phaser.Group.call(this, a), this.init(), this.onRestartButton = new Phaser.Signal, this.onMainMenuButton = new Phaser.Signal
}, Utils.extend(ScoobyBoo.PrankModal, Phaser.Group), ScoobyBoo.PrankModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getPrankModalData();
    this.graymask = this.game.add.sprite(0, 0, a.graymask), this.add(this.graymask), this.graymask.inputEnabled = !0, this.graymask.input.priorityID = 4, this.bg = this.game.add.sprite(0, 0, a.background), this.add(this.bg), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2 - 80, this.scoobyScared = this.game.add.sprite(0, 0, a.scoobyScared), this.add(this.scoobyScared), this.scoobyScared.x = 0, this.scoobyScared.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.scoobyScared.height, this.shaggyScared = this.game.add.sprite(0, 0, a.shaggyScared), this.add(this.shaggyScared), this.shaggyScared.x = ScoobyBoo.GameModel.GAME_WIDTH - this.shaggyScared.width, this.shaggyScared.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.shaggyScared.height;
    var b = {
        font: "40px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.title = new Phaser.Text(this.game, 0, 0, " Haha! SCARED YOU! ", b), this.add(this.title), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.title.width / 2, this.title.y = this.bg.y + 40, this.buttonRestart = new LabelButton(this.game, 0, 0, a.buttonRestart, "", this.onRestartButtonClick, this, 1, 0, 0), this.buttonRestart.setLabel("REPLAY  ", 30), this.add(this.buttonRestart), this.buttonRestart.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonRestart.y = this.bg.y + 170, this.buttonRestart.inputEnabled = !0, this.buttonRestart.input.priorityID = 5, this.buttonMainMenu = new LabelButton(this.game, 0, 0, a.buttonMainMenu, "", this.onMainMenuButtonClick, this, 1, 0, 0), this.buttonMainMenu.setLabel("MAIN MENU  ", 30), this.add(this.buttonMainMenu), this.buttonMainMenu.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonMainMenu.y = this.bg.y + 250, this.buttonMainMenu.inputEnabled = !0, this.buttonMainMenu.input.priorityID = 5, this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.audioPrankPage = this.game.add.audio("audio.prank.page.appear"), this.hide()
}, ScoobyBoo.PrankModal.prototype.show = function() {
    this.game.sound.mute || this.audioPrankPage.play(), this.y = 0
}, ScoobyBoo.PrankModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.PrankModal.prototype.onRestartButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onRestartButton.dispatch(this)
}, ScoobyBoo.PrankModal.prototype.onMainMenuButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onMainMenuButton.dispatch(this)
}, ScoobyBoo.CongratsModal = function(a) {
    Phaser.Group.call(this, a), this.init(), this.onPlayAgainButton = new Phaser.Signal, this.onMainMenuButton = new Phaser.Signal
}, Utils.extend(ScoobyBoo.CongratsModal, Phaser.Group), ScoobyBoo.CongratsModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getCongratsModalData();
    this.graymask = this.game.add.sprite(0, 0, a.graymask), this.add(this.graymask), this.graymask.inputEnabled = !0, this.graymask.input.priorityID = 4, this.bg = this.game.add.sprite(0, 0, a.background), this.add(this.bg), this.bg.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.bg.width / 2, this.bg.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - this.bg.height / 2, this.scoobyHappy = this.game.add.sprite(0, 0, a.scoobyHappy), this.add(this.scoobyHappy), this.scoobyHappy.x = 0, this.scoobyHappy.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.scoobyHappy.height, this.shaggyHappy = this.game.add.sprite(0, 0, a.shaggyHappy), this.add(this.shaggyHappy), this.shaggyHappy.x = ScoobyBoo.GameModel.GAME_WIDTH - this.shaggyHappy.width, this.shaggyHappy.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.shaggyHappy.height, this.scoobyScared = this.game.add.sprite(0, 0, a.scoobyScared), this.add(this.scoobyScared), this.scoobyScared.x = 0, this.scoobyScared.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.scoobyScared.height, this.shaggyScared = this.game.add.sprite(0, 0, a.shaggyScared), this.add(this.shaggyScared), this.shaggyScared.x = ScoobyBoo.GameModel.GAME_WIDTH - this.shaggyScared.width, this.shaggyScared.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.shaggyScared.height, this.scoobyHappy.visible = !1, this.shaggyHappy.visible = !1, this.scoobyScared.visible = !1, this.shaggyScared.visible = !1;
    var b = {
        font: "50px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.title = new Phaser.Text(this.game, 0, 0, "GREAT WORK! ", b), this.add(this.title), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.title.width / 2, this.title.y = this.bg.y + 45;
    var c = {
        font: "20px helsinkiregular",
        fill: "#FFFFFF",
        align: "center"
    };
    this.message = new Phaser.Text(this.game, 0, 0, "You found all " + ScoobyBoo.GameModel.OBJECTS_ON_SCREEN + " objects.\nYour Score:", c), this.add(this.message), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.message.width / 2, this.message.y = this.title.y + this.title.height + 30;
    var d = {
        font: "40px helsinkiregular",
        fill: "#FFFFFF",
        align: "center",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.messageScore = new Phaser.Text(this.game, 0, 0, " 0 ", d), this.add(this.messageScore), this.messageScore.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.messageScore.width / 2, this.messageScore.y = this.message.y + this.message.height + 20, this.buttonRestart = new LabelButton(this.game, 0, 0, a.buttonRestart, "", this.onPlayAgainButtonClick, this, 1, 0, 0), this.buttonRestart.setLabel("PLAY AGAIN ", 10), this.add(this.buttonRestart), this.buttonRestart.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonRestart.y = this.bg.y + 320, this.buttonRestart.inputEnabled = !0, this.buttonRestart.input.priorityID = 5, this.buttonMainMenu = new LabelButton(this.game, 0, 0, a.buttonMainMenu, "", this.onMainMenuButtonClick, this, 1, 0, 0), this.buttonMainMenu.setLabel("MAIN MENU  ", 10), this.add(this.buttonMainMenu), this.buttonMainMenu.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.buttonMainMenu.y = this.bg.y + 400, this.buttonMainMenu.inputEnabled = !0, this.buttonMainMenu.input.priorityID = 5, this.prank = this.game.add.sprite(0, 0, a.prank), this.add(this.prank), this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.audioSuccess = this.game.add.audio("audio.success"), this.hide()
}, ScoobyBoo.CongratsModal.prototype.show = function() {
    this.game.sound.mute || this.audioSuccess.play();
    var a = "",
        b = "You found ";
    ScoobyBoo.GameModel.currentItemsFound < ScoobyBoo.GameModel.OBJECTS_ON_SCREEN ? (a = "ZOINKS! ", b += ScoobyBoo.GameModel.currentItemsFound, this.scoobyHappy.visible = !1, this.shaggyHappy.visible = !1, this.scoobyScared.visible = !0, this.shaggyScared.visible = !0) : (a = "GREAT WORK! ", b += " all the", this.scoobyHappy.visible = !0, this.shaggyHappy.visible = !0, this.scoobyScared.visible = !1, this.shaggyScared.visible = !1), b += " objects.\n", ScoobyBoo.GameModel.currentScore >= ScoobyBoo.GameModel.PERFECT_SCORE ? (b += "Perfect Score!", this.messageScore.fill = "yellow") : (b += "Your Score:", this.messageScore.fill = "white"), this.title.setText(a), this.title.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.title.width / 2, this.message.setText(b), this.message.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.message.width / 2, this.messageScore.setText(ScoobyBoo.GameModel.currentScore + " "), this.messageScore.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - this.messageScore.width / 2, this.y = 0
}, ScoobyBoo.CongratsModal.prototype.hide = function() {
    this.y = -1e3
}, ScoobyBoo.CongratsModal.prototype.onPlayAgainButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onPlayAgainButton.dispatch(this)
}, ScoobyBoo.CongratsModal.prototype.onMainMenuButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.hide(), this.onMainMenuButton.dispatch(this)
}, ScoobyBoo.HUDModal = function(a) {
    Phaser.Group.call(this, a), this.onBackButton = new Phaser.Signal, this.onPauseButton = new Phaser.Signal, this.onTimeOut = new Phaser.Signal, this.init()
}, Utils.extend(ScoobyBoo.HUDModal, Phaser.Group), ScoobyBoo.HUDModal.prototype.init = function() {
    var a = ScoobyBoo.GameModel.controller.getHUDData();
    this.bottomMenu = this.game.add.sprite(0, 0, a.bottomMenu), this.add(this.bottomMenu), this.bottomMenu.y = ScoobyBoo.GameModel.GAME_HEIGHT - this.bottomMenu.height, this.bottomMenu.inputEnabled = !0, this.bottomMenu.input.priorityID = 3, this.hiddenItems = this.game.add.sprite(0, 0, a.hiddenItems), this.add(this.hiddenItems), this.hiddenItems.x = 50, this.hiddenItems.y = this.bottomMenu.y - this.hiddenItems.height / 2 + 35, this.hiddenItems.inputEnabled = !0, this.hiddenItems.input.priorityID = 3, this.addChild(this.bottomMenu), this.gameTimer = this.game.add.sprite(0, 0, a.gameTimerImage), this.add(this.gameTimer), this.gameTimer.anchor.setTo(.5, .5), this.gameTimer.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.gameTimer.y = this.gameTimer.height / 2, this.gameTimer.inputEnabled = !0, this.gameTimer.input.priorityID = 3, this.backButton = this.game.add.button(a.backButtonX, a.backButtonY, a.backButtonImage, this.onBackButtonClick, this, 1, 0, 0), this.backButton.input.useHandCursor = !0, this.backButton.inputEnabled = !0, this.backButton.input.priorityID = 3, this.pauseButton = this.game.add.button(a.pauseButtonX, a.pauseButtonY, a.pauseButtonImage, this.onPauseButtonClick, this, 1, 0, 0), this.pauseButton.input.useHandCursor = !0, this.pauseButton.inputEnabled = !0, this.pauseButton.input.priorityID = 3, this.pauseButton.x = ScoobyBoo.GameModel.GAME_WIDTH - this.pauseButton.width;
    var b = {
        font: "50px helsinkiregular",
        fill: "#FFFFFF",
        stroke: "#2F2F2F",
        strokeThickness: 6
    };
    this.gameTimeTxt = new Phaser.Text(this.game, 0, 0, "", b), this.add(this.gameTimeTxt), this.gameTimeTxt.x = this.gameTimer.x - 5, this.gameTimeTxt.y = 5, ScoobyBoo.GameModel.secondsLeft = 1, this.randomPrankDelay = Math.random() * ScoobyBoo.GameModel.prankDelay, this.wasTimeOut = !1, this.audioGenericClick = this.game.add.audio("audio.generic.click"), this.audioTic = this.game.add.audio("audio.tic"), this.audioToc = this.game.add.audio("audio.toc")
}, ScoobyBoo.HUDModal.prototype.onBackButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onBackButton.dispatch(this)
}, ScoobyBoo.HUDModal.prototype.onPauseButtonClick = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onPauseButton.dispatch(this)
}, ScoobyBoo.HUDModal.prototype.startTimer = function(a) {
    ScoobyBoo.GameModel.secondsLeft = a, this.updateGameTimeTxt(), this.intervalId = this.game.time.events.loop(Phaser.Timer.SECOND, this.updateTimer, this)
}, ScoobyBoo.HUDModal.prototype.stopTimer = function() {
    this.game.time.events.remove(this.intervalId)
}, ScoobyBoo.HUDModal.prototype.resumeTimer = function() {
    this.intervalId = this.game.time.events.loop(Phaser.Timer.SECOND, this.updateTimer, this)
}, ScoobyBoo.HUDModal.prototype.updateTimer = function() {
    return ScoobyBoo.GameModel.isTimeOut ? void 0 : (ScoobyBoo.GameModel.secondsLeft <= ScoobyBoo.GameModel.ticTocDelay + 1 ? (this.gameTimeTxt.fill = "red", this.game.sound.mute || (ScoobyBoo.GameModel.secondsLeft % 2 ? this.audioTic.play() : this.audioToc.play())) : this.gameTimeTxt.fill = "white", ScoobyBoo.GameModel.secondsLeft--, this.updateGameTimeTxt(), ScoobyBoo.GameModel.secondsLeft <= 0 || 2 == ScoobyBoo.GameModel.gameMode && ScoobyBoo.GameModel.secondsLeft < this.randomPrankDelay ? (ScoobyBoo.GameModel.isTimeOut = !0, void this.onTimeOut.dispatch(this)) : void 0)
}, ScoobyBoo.HUDModal.prototype.updateGameTimeTxt = function() {
    this.gameTimeTxt.setText(Utils.convertToMMSS(ScoobyBoo.GameModel.secondsLeft) + " ")
}, ScoobyBoo.BottomButton = function(a, b, c, d) {
    Phaser.Sprite.call(this, a, 0, 0, ""), this.isCategory = d, this.onClicked = new Phaser.Signal, this.active = !1, this.initialize(b, c)
}, Utils.extend(ScoobyBoo.BottomButton, Phaser.Sprite), ScoobyBoo.BottomButton.prototype.initialize = function(a, b) {
    this.back_up = this.game.make.sprite(0, 0, this.isCategory ? "game.bottom.button.up" : "game.items.button.up"), this.addChild(this.back_up), this.back_down = this.game.make.sprite(0, 0, this.isCategory ? "game.bottom.button.down" : "game.items.button.down"), this.back_down.visible = !1, this.addChild(this.back_down), this.back_up.inputEnabled = !0, this.back_down.inputEnabled = !0, this.back_up.input.useHandCursor = !0, this.back_down.input.useHandCursor = !0, this.back_up.events.onInputDown.add(this.tapHandler, this), this.back_down.events.onInputDown.add(this.tapHandler, this), this.back_up.events.onInputUp.add(this.outHandler, this), this.back_down.events.onInputUp.add(this.outHandler, this), this.icon = this.game.make.sprite(0, 0, a);
    var c = (this.back_up.width - 20) / this.icon.width;
    this.icon.scale.setTo(c, c), this.icon.x = this.back_up.width / 2 - this.icon.width / 2, this.icon.y = this.back_up.height / 2 - this.icon.height / 2, this.addChild(this.icon)
}, ScoobyBoo.BottomButton.prototype.setEnabled = function(a) {
    this.back_up.inputEnabled = a, this.back_down.inputEnabled = a
}, ScoobyBoo.BottomButton.prototype.getWidth = function() {
    return this.back_up.width
}, ScoobyBoo.BottomButton.prototype.getHeight = function() {
    return this.back_up.height
}, ScoobyBoo.BottomButton.prototype.getID = function() {
    return this.id
}, ScoobyBoo.BottomButton.prototype.setID = function(a) {
    this.id = a
}, ScoobyBoo.BottomButton.prototype.setActive = function(a) {
    this.active = a, this.back_up.visible = !a, this.back_down.visible = a
}, ScoobyBoo.BottomButton.prototype.outHandler = function() {
    this.active || (this.back_up.visible = !0, this.back_down.visible = !1)
}, ScoobyBoo.BottomButton.prototype.tapHandler = function() {
    this.active || (this.back_up.visible = !1, this.back_down.visible = !0, this.onClicked.dispatch(this))
}, ScoobyBoo.ItemButton = function(a, b, c) {
    Phaser.Group.call(this, a), this.onClicked = new Phaser.Signal, this.active = !1, this.initialize(b, c)
}, Utils.extend(ScoobyBoo.ItemButton, Phaser.Group), ScoobyBoo.ItemButton.prototype.initialize = function(a, b) {
    this.id = b, this.back_up = this.game.make.sprite(0, 0, "game.items.button.up"), this.add(this.back_up), this.back_down = this.game.make.sprite(0, 0, "game.items.button.down"), this.back_down.visible = !1, this.add(this.back_down), this.back_up.inputEnabled = !0, this.back_down.inputEnabled = !0, this.back_up.input.useHandCursor = !0, this.back_down.input.useHandCursor = !0, this.back_up.events.onInputDown.add(this.tapHandler, this), this.back_down.events.onInputDown.add(this.tapHandler, this), this.back_up.events.onInputUp.add(this.outHandler, this), this.back_down.events.onInputUp.add(this.outHandler, this);
    var c = ScoobyBoo.GameModel.getItem(a, b);
    this.icon = this.game.make.sprite(0, 0, "icons"), this.icon.frameName = c.icon, this.icon.x = this.back_up.width / 2 - this.icon.width / 2, this.icon.y = this.back_up.height / 2 - this.icon.height / 2, this.add(this.icon)
}, ScoobyBoo.ItemButton.prototype.getWidth = function() {
    return this.width
}, ScoobyBoo.ItemButton.prototype.getHeight = function() {
    return this.height
}, ScoobyBoo.ItemButton.prototype.getID = function() {
    return this.id
}, ScoobyBoo.ItemButton.prototype.setID = function(a) {
    this.id = a
}, ScoobyBoo.ItemButton.prototype.setEnabled = function(a) {
    this.back_up.inputEnabled = a, this.back_down.inputEnabled = a
}, ScoobyBoo.ItemButton.prototype.setActive = function(a) {
    this.active = a, this.back_up.visible = !a, this.back_down.visible = a
}, ScoobyBoo.ItemButton.prototype.outHandler = function() {
    this.active || (this.back_up.visible = !0, this.back_down.visible = !1)
}, ScoobyBoo.ItemButton.prototype.tapHandler = function() {
    this.active || (console.log(this.id), this.back_up.visible = !1, this.back_down.visible = !0, this.onClicked.dispatch(this))
}, ScoobyBoo.ConfirmationDirectionAsset = function(a) {
    Phaser.Group.call(this, a), this.onConfirm = new Phaser.Signal, this.init()
}, Utils.extend(ScoobyBoo.ConfirmationDirectionAsset, Phaser.Group), ScoobyBoo.ConfirmationDirectionAsset.prototype.init = function() {
    var a, b = this.game.add.bitmapData(ScoobyBoo.GameModel.GAME_WIDTH, ScoobyBoo.GameModel.GAME_HEIGHT);
    b.ctx.beginPath(), b.ctx.rect(0, 0, ScoobyBoo.GameModel.GAME_WIDTH, ScoobyBoo.GameModel.GAME_HEIGHT), b.ctx.fillStyle = "#000000", b.ctx.fill(), a = this.game.add.sprite(0, 0, b), a.inputEnabled = !0, a.alpha = ScoobyBoo.GameModel.INACTIVE_ALPHA, this.add(a), this.style = {
        font: "27px Arial",
        fontStyle: "italic",
        fontWeight: "bold",
        fill: "#064ea0"
    };
    var c = this.game.make.sprite(0, 0, "game.modal");
    c.x = ScoobyBoo.GameModel.GAME_WIDTH / 2 - c.width / 2, c.y = ScoobyBoo.GameModel.GAME_HEIGHT / 2 - c.height / 2, this.add(c), this.label = new Phaser.Text(this.game, 0, 0, "WHAT OPTION\nWOULD YOU LIKE\nTO DOWNLOAD?", this.style), this.label.align = "center", this.label.anchor.setTo(.5, 0), this.label.position.setTo(ScoobyBoo.GameModel.GAME_WIDTH / 2, c.y + 50), this.add(this.label), this.yes = new LabelButton(this.game, 0, 0, "button.texted.download", "", this.onYes, this, 1, 0, 0), this.yes.setLabel("VERTICAL", 20), this.no = new LabelButton(this.game, 0, 0, "button.texted.download", "", this.onNo, this, 1, 0, 0), this.no.setLabel("HORIZONTAL", 20), this.no.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.yes.x = ScoobyBoo.GameModel.GAME_WIDTH / 2, this.yes.y = this.label.y + this.label.height + 40, this.no.y = this.yes.y + this.yes.height + 10, this.add(this.yes), this.add(this.no), this.close = this.game.make.button(0, 0, "button.close", this.onClose, this), this.close.x = c.x + c.width - 40 - this.close.width,
        this.close.y = c.y + 40, this.add(this.close), this.audioGenericClick = this.game.add.audio("audio.generic.click")
}, ScoobyBoo.ConfirmationDirectionAsset.prototype.onClose = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.destroy()
}, ScoobyBoo.ConfirmationDirectionAsset.prototype.onYes = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onConfirm.dispatch(!0), this.destroy()
}, ScoobyBoo.ConfirmationDirectionAsset.prototype.onNo = function() {
    this.game.sound.mute || this.audioGenericClick.play(), this.onConfirm.dispatch(!1), this.destroy()
};
